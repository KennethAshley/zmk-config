/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV   1
#define SYM   2

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&mt {
  flavor = "tap-preferred";
  tapping_term_ms = <150>;
};

/ {

      combos {
         compatible = "zmk,combos";
         combo_esc {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp ESC>;
         };
         combo_alt {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LALT>;
         };
         combo_del {
             timeout-ms = <50>;
             key-positions = <8 9>;
             bindings = <&kp DEL>;
          };
          combo_bspc {
             timeout-ms = <50>;
             key-positions = <19 20>;
             bindings = <&kp BSPC>;
          };
          combo_ctrl {
             timeout-ms = <50>;
             layers = <0 1>;
             key-positions = <14 15>;
             bindings = <&kp LGUI>;
          };
      };
      
      behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
      };
   
      keymap {
         compatible = "zmk,keymap";
         
         default_layer {
         
            // -----------------------------------------------------------------------------------------
            // ||  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  '  ||
            // ||  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  ||
            // ||  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  ||
            //              | KEN | NAV | BCK |   | SPC | SYM  | JILL 

            bindings = <
               &trans &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L &kp U     &kp Y   &kp SQT  &trans
               &trans &kp A &kp R &kp S &kp T &kp G   &kp M &kp N &kp E     &kp I   &kp O    &trans
               &trans &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H &kp COMMA &kp DOT &kp FSLH &trans
                           &trans &mo NAV &kp SPACE   &kp BSPC &mo SYM &trans
            >;
         };
                
         lower_layer {
         
            // -----------------------------------------------------------------------------------------
            // || ESC |     |     |     |     |   |     |     |     |     | CAP ||
            // || SPR | ALT | CTR | SHT |     |   | LFT | DWN | UP  | RGT | ENT ||
            // || UND | CUT | CPY |     | PST |   | TAB?| TAB |     |     |     ||
            //              | GUI | LWR | BCK |   | ENT |     |     |

            bindings = <
               &trans &kp LG(Q) &kp LG(W) &kp LG(F) &none     &none       &none    &none     &none  &none      &caps_word &trans
               &trans &kp LG(A) &kp LG(R) &kp LG(S) &kp LG(T) &none       &kp LEFT &kp DOWN  &kp UP &kp RIGHT  &kp RET    &trans
               &trans &kp LG(Z) &kp LG(X) &kp LG(C) &none     &kp LG(V)   &none    &kp TAB   &trans &trans     &none      &trans
                                              &kp LGUI  &mo 1 &kp SPACE   &kp RET  &trans    &trans
            >;
         };

         raise_layer {
         
            // -----------------------------------------------------------------------------------------
            // ||  !  |  @  |  #  |  $  |  %  |   |  *  |  7  |  8  |  9  |  /  ||
            // ||  `  |  ;  |  [  |  (  |  {  |   |  -  |  4  |  5  |  6  |  +  ||
            // ||  ~  |  :  |  ]  |  )  |  }  |   |  0  |  1  |  2  |  3  |  =  ||
            //              | GUI | LWR | BCK |   | SPC | RSE | ALT

            bindings = <
               &trans    &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp KP_MULTIPLY &kp N7 &kp N8 &kp N9 &trans &trans
               &trans    &kp GRAVE &kp LBKT &kp LBRC &kp LPAR &trans      &kp MINUS &kp N4 &kp N5 &kp N6 &kp PLUS &trans
               &kp TILDE &kp SEMI  &kp RBKT &kp RBRC &kp RPAR &trans      &kp N0 &kp N1 &kp N2 &kp N3 &kp EQUAL &trans
                            &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
            >;
         };
      };
};